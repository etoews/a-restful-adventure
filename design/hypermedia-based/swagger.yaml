swagger: "2.0"
info:
  version: 1.0.0
  title: A RESTful Adventure
host: localhost
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /characters:
    get:
      summary: List all Characters
      operationId: list_characters
      responses:
        200:
          description: An array of Characters
          schema:
            $ref: "#/definitions/Characters"
          examples:
            application/json: |-
              {
                "characters": [
                  {
                    "name": "Knox Thunderbane",
                    "links": [
                      {
                        "rel": "self",
                        "allow": [
                          "GET", "PUT"
                        ],
                        "href": "/characters/1234"
                      },
                      {
                        "rel": "location",
                        "allow": [
                          "GET", "PUT"
                        ],
                        "href": "/characters/1234/location"
                      }
                    ]
                  }
                ],
                "links": [
                  {
                    "rel": "self",
                    "allow": [
                      "GET", "POST"
                    ],
                    "href": "/characters"
                  }
                ]
              }
    post:
      summary: Create a Character
      operationId: create_character
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 256
      x-examples:
        application/json: { "name": "Knox Thunderbane" }
      responses:
        201:
          description: Character created
          headers:
            Location:
              type: string
              format: url
              description: A link to the Character
          schema:
            $ref: "#/definitions/Character"
          examples:
            application/json: |-
              {
                "name": "Knox Thunderbane",
                "links": [
                  {
                    "rel": "self",
                    "allow": [
                      "GET", "PUT"
                    ],
                    "href": "/characters/1234"
                  },
                  {
                    "rel": "location",
                    "allow": [
                      "GET", "PUT"
                    ],
                    "href": "/characters/1234/location"
                  }
                ]
              }
        default:
          description: Unexpected errors
          schema:
            $ref: "#/definitions/Errors"
  /characters/{character_id}:
    get:
      summary: Get a specific Character
      operationId: get_character
      parameters:
        - name: character_id
          in: path
          required: true
          type: string
          description: The id of the Character to retrieve
      responses:
        200:
          description: A Character
          schema:
            $ref: "#/definitions/Character"
          examples:
            application/json: |-
              {
                "name": "Knox Thunderbane",
                "links": [
                  {
                    "rel": "self",
                    "allow": [
                      "GET", "PUT"
                    ],
                    "href": "/characters/1234"
                  },
                  {
                    "rel": "location",
                    "allow": [
                      "GET", "PUT"
                    ],
                    "href": "/characters/1234/location"
                  }
                ]
              }
        default:
          description: Unexpected Errors
          schema:
            $ref: "#/definitions/Errors"
    put:
      summary: Update a Character
      operationId: update_character
      parameters:
        - name: character_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Rename a Character.
          schema:
            $ref: "#/definitions/Character"
      x-examples:
        application/json: |-
          {
            "name": "Knox Thunderbane II"
          }
      responses:
        204:
          description: Character updated
        default:
          description: Unexpected errors
          schema:
            $ref: "#/definitions/Errors"
    delete:
      summary: Delete a Character
      operationId: delete_character
      parameters:
        - name: character_id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Character deleted
        default:
          description: Unexpected errors
          schema:
            $ref: "#/definitions/Errors"
  /characters/{character_id}/location:
    get:
      summary: Get a specific Character's location
      operationId: get_character_location
      parameters:
        - name: character_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: A CharacterLocation
          schema:
            $ref: "#/definitions/CharacterLocation"
          examples:
            application/json: |-
              {
                  "allow": [
                      "GET"
                  ],
                  "href": "dungeons/1234/rooms/1001",
                  "rel": "room"
              }
        default:
          description: Unexpected Errors
          schema:
            $ref: "#/definitions/Errors"
    put:
      summary: Update a Character's location
      operationId: update_character_location
      parameters:
        - name: character_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            properties:
              rel:
                type: string
              href:
                type: string
                format: url
      x-examples:
        application/json: |-
          {
            "rel": "room",
            "href": "/dungeons/1234/rooms/1002"
          }
      responses:
        204:
          description: Character updated
        default:
          description: Unexpected errors
          schema:
            $ref: "#/definitions/Errors"
  /dungeons:
    get:
      summary: List all Dungeons
      operationId: list_dungeons
      responses:
        200:
          description: An array of Dungeons
          schema:
            properties:
              dungeons:
                type: array
                $ref: "#/definitions/Dungeons"
          examples:
            application/json: |-
              {
                "dungeons": [
                  {
                    "name": "Dungeon of Doom",
                    "entrance_room_id": "1000",
                    "links": [
                      {
                        "rel": "self",
                        "href": "/dungeons/1234"
                      },
                      {
                        "rel": "room",
                        "allow": [
                            "GET"
                        ],
                        "href": "/dungeons/1234/rooms/1002",
                        "description": "entrance"
                    ]
                  }
                ],
                "links": [
                  {
                    "rel": "self",
                    "allow": [
                        "GET"
                    ],
                    "href": "/dungeons"
                  }
                ]
              }
  /dungeons/{dungeon_id}:
    get:
      summary: Get a specific Dungeon
      operationId: get_dungeon
      parameters:
        - name: dungeon_id
          in: path
          required: true
          description: The id of the Dungeon to retrieve
          type: string
      responses:
        200:
          description: A Dungeon
          schema:
            $ref: "#/definitions/Dungeon"
          examples:
            application/json: |-
              {
                "name": "Dungeon of Doom",
                "links": [
                  {
                    "rel": "self",
                    "href": "/dungeons/1234"
                  },
                  {
                    "rel": "room",
                    "allow": [
                        "GET"
                    ],
                    "href": "/dungeons/1234/rooms/1000",
                    "description": "entrance"
                ]
              }
        default:
          description: Unexpected errors
          schema:
            $ref: "#/definitions/Errors"
  /dungeons/{dungeon_id}/rooms/{room_id}:
    get:
      summary: Get a specific Room in a specific Dungeon
      operationId: get_room
      parameters:
        - name: dungeon_id
          in: path
          description: The id of the Dungeon
          required: true
          type: string
        - name: room_id
          in: path
          description: The id of the Room
          required: true
          type: string
      responses:
        200:
          description: Expected response to a valid request
          schema:
            $ref: "#/definitions/Room"
          examples:
            application/json: |-
              {
                "name": "Entrance",
                "is_exit": false,
                "links": [
                  {
                    "rel": "self",
                    "href": "/dungeons/1234/rooms/1000"
                  },
                  {
                    "rel": "room",
                    "allow": [
                        "GET"
                    ],
                    "href": "/dungeons/1234/rooms/1001"
                    "description": "east",
                  }
                ]
              }
        default:
          description: Unexpected errors
          schema:
            $ref: "#/definitions/Errors"
definitions:
  Character:
    required:
      - name
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 256
      links:
        type: array
        readOnly: true
        items:
          type: object
          properties:
            rel:
              type: string
            allow:
              type: string
            href:
              type: string
              format: url
  Characters:
    readOnly: true
    properties:
      characters:
        type: array
        items:
          $ref: "#/definitions/Character"
      links:
        type: array
        items:
          type: object
          properties:
            rel:
              type: string
            allow:
              type: string
            href:
              type: string
              format: url
  CharacterLocation:
    properties:
      rel:
        type: string
      allow:
        type: string
      href:
        type: string
        format: url
  Room:
    readOnly: true
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
      dungeon_id:
        type: string
      is_exit:
        type: boolean
      doors:
        type: array
        items:
          type: object
          properties:
            room_id:
              type: string
            direction:
              type: string
              enum:
                - north
                - south
                - east
                - west
  Dungeon:
    readOnly: true
    properties:
      id:
        type: string
      entrance_room_id:
        type: string
      name:
        type: string
  Dungeons:
    type: array
    items:
      $ref: "#/definitions/Dungeon"
  Error:
    readOnly: true
    properties:
      transaction_id:
        type: string
        description: A transaction id for error response. Used to easily match an API user debugging their application to the errors on the server side, as discoverable by the operations team running the API.
      code:
        type: string
        description: A machine readable application error code. Not to be confused with the HTTP status code in the response.
      title:
        type: string
        description: A short, human readable title of the error.
      description:
        type: string
        description: A long, human readable description of the error.
      link:
        properties:
          rel:
            type: string
            enum: [ "help" ]
          href:
            type: string
            format: url
            description: A link to a document containing more information about the error and how to take action on it.
  Errors:
    type: array
    items:
      $ref: "#/definitions/Error"
